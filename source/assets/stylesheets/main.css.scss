//= require normalize-css/normalize.css
//= require html5-boilerplate/dist/css/main.css
// Pull normalize.css & html5bp in via sprockets, because SASS doesn't compile it
// -> doing this via @import generates an "@import" in the CSS, which is undesirable
// -> html5bp css is just base styles for the wireframe. delete or integrate for production.

/* /////////////////////////////////////////////////////////////////////////////
// Core style helpers
// -> global settings, resets, helper classes
///////////////////////////////////////////////////////////////////////////// */

@import "core/settings"; // global settings
@import "core/animation"; // global animation/behaviors
@import "core/fonts"; // all @font-face things and base type scale
@import "core/borders"; // global border styles
@import "core/color"; // global/base color schemes
@import "core/layout"; // global layout styles/helpers

/* /////////////////////////////////////////////////////////////////////////////
// Atoms
// -> individual elements
///////////////////////////////////////////////////////////////////////////// */

@import "atoms/*";

/* /////////////////////////////////////////////////////////////////////////////
// Molecules
// -> simple groups of things that can be easily combined & reused
///////////////////////////////////////////////////////////////////////////// */

@import "molecules/*";

/* /////////////////////////////////////////////////////////////////////////////
// Organisms
// -> self-contained, reusable groups of molecules
///////////////////////////////////////////////////////////////////////////// */

@import "organisms/*";

/* /////////////////////////////////////////////////////////////////////////////
// Regions
// -> reusable, major content regions containing specific combinations of organisms
// -> compose entirely with organisms as much as possible
// -> should not contain much "original" styling, leave that to
//      the atoms, molecules, organisms
///////////////////////////////////////////////////////////////////////////// */

@import "regions/*";

/* /////////////////////////////////////////////////////////////////////////////
// Styles of Shame
// -> put quick and dirty hacks here, then clean up & organize later
///////////////////////////////////////////////////////////////////////////// */

//============ Figure Styles
    .figure .text {
        @extend %font-body;
        font-size: fs(5);    

        &.light { fill: theme('text' 'primary', 'reverse'); }
        &.dark { fill: theme(text secondary); }
        &.data { @extend %font-body--bold; }
        &.bold { @extend %font-body--bold; }    

        &.title{
            font-size: fs(7);
            fill: theme(text tertiary);

            &.type {
                @extend %font-body--bold;
            }
        }
    }

    .gridline {
        stroke-width: .2px;
    }

    .circle.white {
        fill: theme('text' 'primary', 'reverse');
    }

    .rings {
        fill: theme(border, wash);
    }

    .graph.fill{
        fill: highlight('green');
    }

    .text.y-axis { 
        fill: highlight('green');
    }

//============///


//============ Table Styles

table {
    width: 100%;

    th {
        border-bottom: 4px solid theme(highlight);
        text-align: left;
        background-color: #fff;
    }
    
    td {
        padding-left: 8px;
        line-height: 220%;
    }
    tr:nth-child(even) {
        background-color: theme(well);
    }

    &.total-table {
        tr:last-child {
            background-color: theme(highlight);
            color: theme(text primary, reverse);
            @extend %font-body--bold; 
        }
    }
}


// refs for scott
// .some_random_thing {
//     // font placeholder
//     @extend %font-body--bold;

//     // border helper
//     @include border(bottom right, thick);
//     @include border(bottom); // defaults to "thin" border style
//     @include border; // if you don't pass anything it makes a thin border on all sides

//     // font scale function - 2 = ~13px
//     font-size: fs(2);

//     // highlight color
//     color: theme(highlight);

//     // text color -- add primary, secondary, tertiary
//     color: theme(text tertiary);
// }


